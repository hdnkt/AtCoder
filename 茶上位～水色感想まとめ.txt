ABC170-D Not Divisible
　与集合のなかでの「素数」（集合内の他のどの値でも割り切れない）の数を求める
　
　エラストテレスの篩にちょっと条件プラス。
　計算量はエラストテレスの篩より悪いって直観的に思って無理だなあと思ったから
　避けてたんだけどそれでも全然間に合う（分数の和がlogに近い発散の仕方である）

ABC170-E Smart Infants
　集合S1～Sn中のそれぞれの最大値の最小値をもとめる。ｑ回要素の移動があるので
　それぞれの移動後に出力。ｑが10の5乗くらいなので一回あたりlogくらいじゃなき
　ゃだめ。二分木があればまあまあ簡単。priorityqで間に合わせるしかないpythonェ。

ABC169-C Multiplication
　み　ん　な　の　ト　ラ　ウ　マ
　浮動小数点は仕組み上すべての小数を正確に表せているわけじゃないのです。

ABC169-D Div game
　Nの素数判定は√Nまででいいからそれと勘違いしていたけれど約数探しは√Nまで
　じゃ足りない...（しかし√Nより大きい約数として存在し得るのは１つのみ）

ABC169-E Count Median
　「とり得る値全列挙」で無理やろ..ってときにあり得る一つの可能性が「最小値と
　最大値の間の値全部とれる」という。今回は完全にそれに気づけるかどうか。偶数
　奇数の場合分け注意

ABC168-D
　最短経路は幅優先探索。（道毎に重みが違ったらダイクストラ、負の重みもあったら
　ワ―シャルフロイド）

ABC167-C
　妙にNが小さいな..bit全探索！

ABC167-D
　何で詰まってたんだっけ...配列の操作をどこかで間違えていた？Nが馬鹿でかい→
　どうせ何かでループするor収束するよ。
　最強にして最弱のセキュリティ対策手法「専門家が注意深くコードを読む」

ABC166-D
　数学的操作により探索範囲が狭いことはすぐに（50分後に）わかる

ABC166-E
　式操作でi同士の依存関係の式をi毎の値一つを比べるだけのしきにしてmap

ABC165-C
　bit全探索（の実装大嫌い男）

ABC165-D
　グラフ書いたら簡単二郎。法則性、特にループや収束を疑う。

ABC164-D
　伝説の始まり。解説だるシム

ABC163-D
  「最大値と最小値の間全部とれることに気づく男」

ABC162-D
　複数を満たす組み合わせの数、の方針例
　一つ目の条件を満たす組み合わせの数を先に求める
　二つ目の条件を満たすか確認。（or満たさないものを取り除く）

ABC161-D LunLun Number
　当時ワイ、天才の実装。

ABC


　
　
